Description: >
  Cloud Servers | RKE Cluster

Parameters:
  EnvironmentName:
    Type: String
  MinAutoScalingSize:
    Type: Number
    Default: 4
  MaxAutoScalingSize:
    Type: Number
    Default: 4
  KeyName:
    Description: 'Key name for existing ssh key pair'
    Type: String
    Default: cloud
    ConstraintDescription: Must be an existing keypair

Resources:
  AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: RkePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'ec2:Describe*'
            Resource: '*'
          - Effect: Allow
            Action: 'ec2:AttachVolume'
            Resource: '*'
          - Effect: Allow
            Action: 'ec2:DetachVolume'
            Resource: '*'
          - Effect: Allow
            Action: ['ec2:*']
            Resource: ['*']
          - Effect: Allow
            Action: ['elasticloadbalancing:*']
            Resource: ['*']
          - Effect: Allow
            Action: ['iam:CreateServiceLinkedRole']
            Resource: ['*']
      Roles:
        - !Ref RkeRole
  RkeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ec2.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref RkeRole
  ServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupEgress: 
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: 22
      #   ToPort: 22
      #   CidrIp: 0.0.0.0/0 
      # - IpProtocol: tcp
      #   FromPort: 80
      #   ToPort: 80
      #   CidrIp: 0.0.0.0/0
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-06d51e91cea0dac8d
      KeyName: !Ref KeyName
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo su
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          apt-get update
          apt-get install -y docker-ce
          usermod -aG docker $USER
          sudo chmod a+rwx /var/run/docker.sock
      InstanceType: t2.micro
      IamInstanceProfile:
        Ref: InstanceProfile
      SecurityGroups:
        - Ref: ServerSecGroup
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: !Ref MinAutoScalingSize
      MaxSize: !Ref MaxAutoScalingSize
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PUB-SN"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig